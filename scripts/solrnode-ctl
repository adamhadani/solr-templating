#!/usr/bin/env python
#
#  Licensed under the Apache License, Version 2.0 (the "License"); 
#  you may not use this file except in compliance with the License. 
#  You may obtain a copy of the License at 
#  
#      http://www.apache.org/licenses/LICENSE-2.0 
#     
#  Unless required by applicable law or agreed to in writing, software 
#  distributed under the License is distributed on an "AS IS" BASIS, 
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
#  See the License for the specific language governing permissions and 
#  limitations under the License. 
#
#
"""Control runtime (start/stop/status/kill) of solr instances managed by the framework"""
import os
import sys
import subprocess
from optparse import OptionParser
import logging

from solrnode.env import SolrNodeEnv

def parse_args():
    usage = "%prog <start|stop|status|kill> <instance_name>"
    parser = OptionParser(usage=usage)
    
    parser.add_option("--instances-base-dir", dest="instances_base_dir",
                      help="Instances base dir where instances are installed.")
    
    options, args = parser.parse_args()    
    
    if len(args) != 2:
        parser.error("Invalid number of arguments. Use -h for usage instructions.")
        
    return parser, (options, args)

def main():
    parser, (options, args) = parse_args()
    logging.basicConfig(
        level = logging.INFO,
        format = "%(levelname)s - %(message)s"
    )
    
    env = SolrNodeEnv()
    catalina_home = env['fs']['catalina_home']
    instances_base_dir = options.instances_base_dir or \
        env['fs']['instances_base_dir']
    catalina_opts = env['tomcat']['catalina_opts']
    
    os.environ['CATALINA_BASE'] = os.path.join(
        instances_base_dir, args[1], 'catalina-base')
    os.environ['CATALINA_PID'] = os.path.join(
        os.environ['CATALINA_BASE'], 'catalina.pid')
    os.environ['CATALINA_OPTS'] = catalina_opts
    
    cmd = args[0]
    if cmd in ('start', 'stop'):
        subprocess.call([
            os.path.join(catalina_home, 'bin', 'catalina.sh'),
            cmd
            ])
        
    return 0
    
if __name__ == "__main__":
    sys.exit(main())